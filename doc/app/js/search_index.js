var search_data = {"index":{"searchIndex":["apis","mta","weather","applicationcontroller","applicationhelper","blog","blogscontroller","blogshelper","entriescontroller","entrieshelper","entry","homecontroller","homehelper","readerblog","sessionscontroller","sessionshelper","spoofip","todo","todoscontroller","todoshelper","user","userstar","userscontroller","usershelper","userstarscontroller","weather","alter()","call()","complete!()","contentcheck()","coordinates()","create()","create()","create()","create()","current_user()","destroy()","destroy()","destroy()","downcase_email()","edit()","getnyc()","getwdc()","getweather()","get_response()","index()","index()","index()","makeentryhash()","new()","new()","removefeed()","show()","star()","uncomplete!()","unstar()","update()","update()","update_all_entries()","readme"],"longSearchIndex":["apis","apis::mta","apis::weather","applicationcontroller","applicationhelper","blog","blogscontroller","blogshelper","entriescontroller","entrieshelper","entry","homecontroller","homehelper","readerblog","sessionscontroller","sessionshelper","spoofip","todo","todoscontroller","todoshelper","user","userstar","userscontroller","usershelper","userstarscontroller","weather","apis::weather::alter()","spoofip#call()","todoscontroller#complete!()","blog::contentcheck()","user#coordinates()","blogscontroller#create()","sessionscontroller#create()","todoscontroller#create()","userscontroller#create()","applicationcontroller#current_user()","sessionscontroller#destroy()","todoscontroller#destroy()","userscontroller#destroy()","user#downcase_email()","userscontroller#edit()","apis::mta::getnyc()","apis::mta::getwdc()","apis::weather::getweather()","apis::weather::get_response()","homecontroller#index()","todoscontroller#index()","userstarscontroller#index()","blog::makeentryhash()","spoofip::new()","userscontroller#new()","userscontroller#removefeed()","userscontroller#show()","entriescontroller#star()","todoscontroller#uncomplete!()","entriescontroller#unstar()","todoscontroller#update()","userscontroller#update()","blog::update_all_entries()",""],"info":[["Apis","","Apis.html","",""],["Apis::Mta","","Apis/Mta.html","",""],["Apis::Weather","","Apis/Weather.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Blog","","Blog.html","",""],["BlogsController","","BlogsController.html","",""],["BlogsHelper","","BlogsHelper.html","",""],["EntriesController","","EntriesController.html","",""],["EntriesHelper","","EntriesHelper.html","",""],["Entry","","Entry.html","",""],["HomeController","","HomeController.html","",""],["HomeHelper","","HomeHelper.html","",""],["ReaderBlog","","ReaderBlog.html","",""],["SessionsController","","SessionsController.html","",""],["SessionsHelper","","SessionsHelper.html","",""],["SpoofIp","","SpoofIp.html","",""],["Todo","","Todo.html","",""],["TodosController","","TodosController.html","",""],["TodosHelper","","TodosHelper.html","",""],["User","","User.html","",""],["UserStar","","UserStar.html","",""],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["UserstarsController","","UserstarsController.html","",""],["Weather","","Weather.html","",""],["alter","Apis::Weather","Apis/Weather.html#method-c-alter","(hash)",""],["call","SpoofIp","SpoofIp.html#method-i-call","(env)",""],["complete!","TodosController","TodosController.html#method-i-complete-21","()",""],["contentCheck","Blog","Blog.html#method-c-contentCheck","(feed)","<p>www.alfajango.com/blog/create-a-printable-format-for-any-webpage-with-ruby-and-nokogiri/\n"],["coordinates","User","User.html#method-i-coordinates","()",""],["create","BlogsController","BlogsController.html#method-i-create","()","<p>new blogs can be created, parse the url, if error say so, otherwise make\nentries if not a new blog, just …\n"],["create","SessionsController","SessionsController.html#method-i-create","()","<p>creates a session, checks to see if the weather has been updated recently\nfor that user, only after authenticating …\n"],["create","TodosController","TodosController.html#method-i-create","()",""],["create","UsersController","UsersController.html#method-i-create","()",""],["current_user","ApplicationController","ApplicationController.html#method-i-current_user","()",""],["destroy","SessionsController","SessionsController.html#method-i-destroy","()","<p>destroys a session, and clears cookies\n"],["destroy","TodosController","TodosController.html#method-i-destroy","()",""],["destroy","UsersController","UsersController.html#method-i-destroy","()",""],["downcase_email","User","User.html#method-i-downcase_email","()",""],["edit","UsersController","UsersController.html#method-i-edit","()",""],["getNyc","Apis::Mta","Apis/Mta.html#method-c-getNyc","()",""],["getWdc","Apis::Mta","Apis/Mta.html#method-c-getWdc","()",""],["getWeather","Apis::Weather","Apis/Weather.html#method-c-getWeather","()",""],["get_response","Apis::Weather","Apis/Weather.html#method-c-get_response","(url)",""],["index","HomeController","HomeController.html#method-i-index","()",""],["index","TodosController","TodosController.html#method-i-index","()",""],["index","UserstarsController","UserstarsController.html#method-i-index","()",""],["makeEntryHash","Blog","Blog.html#method-c-makeEntryHash","(feed, id)",""],["new","SpoofIp","SpoofIp.html#method-c-new","(app, ip)",""],["new","UsersController","UsersController.html#method-i-new","()",""],["removefeed","UsersController","UsersController.html#method-i-removefeed","()",""],["show","UsersController","UsersController.html#method-i-show","()",""],["star","EntriesController","EntriesController.html#method-i-star","()","<p>place a star on an entry for a user if it isn&#39;t already\n"],["uncomplete!","TodosController","TodosController.html#method-i-uncomplete-21","()",""],["unstar","EntriesController","EntriesController.html#method-i-unstar","()","<p>removes the star from the entry if exists\n"],["update","TodosController","TodosController.html#method-i-update","()",""],["update","UsersController","UsersController.html#method-i-update","()",""],["update_all_entries","Blog","Blog.html#method-c-update_all_entries","()",""],["README","","README_rdoc.html","","<p>Daily Constitutional\n<p>This README would normally document whatever steps are necessary to get the\napplication …\n"]]}}